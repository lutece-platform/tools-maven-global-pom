<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>fr.paris.lutece.tools</groupId>
    <artifactId>lutece-global-pom</artifactId>
    <name>Lutece global pom</name>
    <url>https://${serverUrl}/</url>
    <packaging>pom</packaging>
    <version>8.0.0-SNAPSHOT</version>

    <properties>
        <!-- Misc build parameters -->
        <memory.min>256m</memory.min>
        <memory.max>1g</memory.max>
        <targetJdk>17</targetJdk>
        <maven.compiler.release>17</maven.compiler.release>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>       
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Directory -->
        <explodedDirectory>lutece</explodedDirectory>
<!--		<webapp.name>${project.build.finalName}</webapp.name>-->

        <!-- Lutece specific parameters -->
        <serverUrl>dev.lutece.paris.fr</serverUrl>
        <jiraBaseUrl>https://${serverUrl}/jira</jiraBaseUrl>
        <organization.logo>https://${serverUrl}/images/banner_left.png</organization.logo>
        <github.project>lutece-platform</github.project>
        <twitter.account>LuteceFoundry</twitter.account>
        <openhub.id>7203</openhub.id>
        <jiraProjectName>GLOBALPOM</jiraProjectName>
        <jiraComponentId>12858</jiraComponentId>

        <!-- Build dependencies versions -->
        <maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
        <maven-site-plugin.version>3.8.2</maven-site-plugin.version>
        <maven-checkstyle-plugin.version>3.1.0</maven-checkstyle-plugin.version>
        <maven-pmd-plugin.version>3.12.0</maven-pmd-plugin.version>
        <maven-findbugs-plugin.version>3.0.5</maven-findbugs-plugin.version>
        <maven-formatter-plugin.version>2.10.0</maven-formatter-plugin.version>
        <maven-war-plugin.version>3.2.3</maven-war-plugin.version>
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
        <maven-jacoco-plugin.version>0.8.12</maven-jacoco-plugin.version>
        <maven-javadoc-plugin.version>3.0.1</maven-javadoc-plugin.version>  <!-- 3.1.1 has issues with the JDK 11 -->
        <maven-surefire-plugin.version>3.0.0-M3</maven-surefire-plugin.version>
        <maven-surefire-report-plugin.version>3.0.0-M3</maven-surefire-report-plugin.version>
        <maven-jxr-plugin.version>3.0.0</maven-jxr-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-jdepend-plugin.version>2.0</maven-jdepend-plugin.version>
        <maven-changelog-plugin.version>2.3</maven-changelog-plugin.version>
        <maven-taglist-plugin.version>2.4</maven-taglist-plugin.version>
        <maven-project-info-reports-plugin.version>2.9</maven-project-info-reports-plugin.version>  <!-- 3.0.0 has issues -->
        <maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
        <maven-lutece-plugin.version>5.0.2-SNAPSHOT</maven-lutece-plugin.version>
        <lutece-maven-report.version>1.0.0</lutece-maven-report.version>
        <license-maven-plugin.version>4.1</license-maven-plugin.version>
        <maven-xdoc2md-plugin.version>1.0.3</maven-xdoc2md-plugin.version>
        <maven-scm-provider-jgit.version>1.9.2</maven-scm-provider-jgit.version>
        <sonar-maven-report.version>0.1</sonar-maven-report.version>
        <ant-optional.version>1.5.3-1</ant-optional.version>
        <ant-contrib.version>1.0b3</ant-contrib.version>
        <maven-wagon-ftp.version>2.6</maven-wagon-ftp.version>
        <build-config.version>2.0.1-SNAPSHOT</build-config.version>


        <!-- Runtime dependencies versions -->
        
        <library-lutece-unit-testing.version>5.0.0-SNAPSHOT</library-lutece-unit-testing.version>
        <test-jaxb-runtime.version>4.0.5</test-jaxb-runtime.version>
        <test-hibernate-validator.version>8.0.1.Final</test-hibernate-validator.version>
        <test-jakarta.el.version>5.0.0-M1</test-jakarta.el.version>

        <!-- All database connectors must be kept in sync -->
        <!-- with src/main/resources/build-config/ant/build.properties file present in tools-maven-build-config plugin-->
        <mysql.version>8.0.26</mysql.version>
        <postgresql.version>42.7.2</postgresql.version>
        <hsqldb.version>2.7.4</hsqldb.version>

        <!-- directory provided by the artifact fr.paris.lutece.tools:build-config -->
        <build-config.location>build-config</build-config.location>

        <!-- parameters to override db.properties with dynamic parameters during the antrun:run goal -->
        <antrun-lutece-db-properties>db.properties</antrun-lutece-db-properties>
        <!-- by default these are not used because there are no markers in db.properties, only in db-test-*.properties -->
        <lutece-antrun-db-host>localhost</lutece-antrun-db-host>
        <lutece-antrun-db-name>lutece</lutece-antrun-db-name>
        <lutece-antrun-db-user>root</lutece-antrun-db-user>
        <lutece-antrun-db-password>motdepasse</lutece-antrun-db-password>
        
        <!-- Sonar parameters-->
        <sonar.host.url>https://${serverUrl}/sonar</sonar.host.url>
        <sonar.sources>pom.xml,src/java,webapp</sonar.sources>
        <sonar.tests>src/test</sonar.tests>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.jacoco.reportPath>target/jacoco.exec</sonar.jacoco.reportPath>
        
        <current.year>${maven.build.timestamp}</current.year>
        <maven.build.timestamp.format>yyyy</maven.build.timestamp.format>
	
	<!-- Setting Liberty configuration with Maven project properties-->
        <liberty.defaultVar.app.context.root>${project.artifactId}</liberty.defaultVar.app.context.root>
        <liberty.defaultVar.build.directory>${project.build.directory}</liberty.defaultVar.build.directory>
        <liberty.defaultVar.appLocation>${project.artifactId}-${project.version}.war</liberty.defaultVar.appLocation>
    	
    </properties>

    <licenses>
        <license>
            <name>Lutece license</name>
            <url>https://${serverUrl}/LICENSE.TXT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <organization>
        <name>City of Paris</name>
        <url>https://lutece.paris.fr</url>
    </organization>

    <issueManagement>
        <system>jira</system>
        <url>${jiraBaseUrl}/browse/${jiraProjectName}</url>
    </issueManagement>

    <ciManagement>
        <system>continuum</system>
        <url>https://${serverUrl}/jenkins/</url>
        <notifiers>
            <notifier>
                <type>mail</type>
                <configuration>
                    <address>lutece@paris.fr</address>
                </configuration>
            </notifier>
        </notifiers>
    </ciManagement>

    <repositories>
        <repository>
            <id>lutece</id>
            <name>luteceRepository</name>
            <url>https://${serverUrl}/maven_repository</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>luteceSnapshot</id>
            <name>luteceSnapshot</name>
            <url>https://${serverUrl}/snapshot_repository</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>lutece</id>
            <name>luteceRepository</name>
            <url>https://${serverUrl}/maven_repository</url>
        </pluginRepository>
        <pluginRepository>
            <id>luteceSnapshot</id>
            <name>luteceSnapshot</name>
            <url>https://${serverUrl}/snapshot_repository</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

	<!-- JAKARTA 10 API -->
	<dependencyManagement>
    <dependencies>	  
	   <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-bom</artifactId>
            <version>2.24.1</version>
            <scope>import</scope>
            <type>pom</type>
        </dependency>
        <dependency>
			<groupId>com.fasterxml.jackson</groupId>
	    	<artifactId>jackson-bom</artifactId>
	    	<version>2.16.1</version>
	    	<scope>import</scope>
	    	<type>pom</type>
    	</dependency>
    	 <dependency>
            <groupId>fr.paris.lutece.plugins</groupId>
            <artifactId>library-lutece-unit-testing</artifactId>
            <version>${library-lutece-unit-testing.version}</version>
            <type>jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${test-hibernate-validator.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.el</artifactId>
            <version>${test-jakarta.el.version}</version>
            <type>jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>${test-jaxb-runtime.version}</version>
            <scope>test</scope>
        </dependency>

         <!--
          commons-logging is a transitive dependency of many libraries with different versions.
          Specify the latest version here to not depend on the order of declaration.
          When we manage to get rid of commons-logging, we can safely remove this dependency.
          Lutece-core depend on commons-beanutils libraries that use commons-logging.
        -->
	 	<dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.3.4</version>
		</dependency>  
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-api</artifactId>
		    <version>1.7.36</version>
		</dependency>   
		 
    </dependencies>
  </dependencyManagement>	
    <dependencies>
       <dependency>
	    <groupId>jakarta.platform</groupId>
	    <artifactId>jakarta.jakartaee-api</artifactId>
	    <version>10.0.0</version>
	    <scope>provided</scope>
	  </dependency>
	   <dependency>
            <groupId>org.eclipse.microprofile</groupId>
            <artifactId>microprofile</artifactId>
            <version>6.1</version>
            <scope>provided</scope>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>fr.paris.lutece.tools</groupId>
            <artifactId>build-config</artifactId>
            <version>${build-config.version}</version>
            <scope>provided</scope>
        </dependency>
       
    </dependencies>
    <reporting>
        <plugins>
            <!--    JXR       -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${maven-jxr-plugin.version}</version>
              
            </plugin>
            <!--    PROJECT INFO       -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven-project-info-reports-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <report>summary</report>
                            <report>dependencies</report>
                            <report>cim</report>
                            <report>issue-tracking</report>
                            <report>license</report>
                            <report>scm</report>
                        </reports>
                    </reportSet>
                </reportSets>
                <configuration>
                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                </configuration>
            </plugin>
            <!--    CHECKSTYLE       -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
                <configuration>
                    <minmemory>${memory.min}</minmemory>
                    <maxmemory>${memory.max}</maxmemory>
                    <configLocation>${build-config.location}/lutece_checks.xml</configLocation>
                    <headerLocation>${build-config.location}/checkstyle-header.txt</headerLocation>
                </configuration>
            </plugin>
            <!--    PMD       -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
                <configuration>
                    <minmemory>${memory.min}</minmemory>
                    <maxmemory>${memory.max}</maxmemory>
                    <linkXref>true</linkXref>
                    <rulesets>
                        <ruleset>${build-config.location}/pmd_categories/pmd-lutece.xml</ruleset>
                    </rulesets>
                    <failsOnError>false</failsOnError>
                    <failOnViolation>false</failOnViolation>
                    <printFailingErrors>true</printFailingErrors>
                    <targetJdk>${targetJdk}</targetJdk>
                </configuration>
            </plugin>
            <!--    JDEPEND       -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jdepend-maven-plugin</artifactId>
                <version>${maven-jdepend-plugin.version}</version>
            </plugin>
            <!--    TAG LIST       -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
                <version>${maven-taglist-plugin.version}</version>
                <configuration>
                    <tags>
                        <tag>TODO</tag>
                        <tag>FIXME</tag>
                        <tag>@todo</tag>
                        <tag>@deprecated</tag>
                        <tag>DOCUMENT_ME</tag>
                        <tag>NOT_YET_DOCUMENTED</tag>
                    </tags>
                </configuration>
            </plugin>            
	        <plugin>
	            <groupId>com.github.spotbugs</groupId>
	            <artifactId>spotbugs-maven-plugin</artifactId>
	            <version>4.5.3.0</version>
	            <configuration>
					<xmlOutput>true</xmlOutput>
					<!--
					<excludeFilterFile>${build-config.location}/spotbugs/spotbugs-exclude.xml</excludeFilterFile>
	          		<includeFilterFile>${build-config.location}/spotbugs/spotbugs-include.xml</includeFilterFile>			    
	           		-->
	            </configuration>
	
	        </plugin>
            <!--     SUREFIRE       --> 
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-report-plugin.version}</version>
                <configuration>
                    <showSuccess>true</showSuccess>
                </configuration>
            </plugin>
            <!--      SONAR          -->
            <plugin>
                <groupId>org.codehaus.sonar-plugins</groupId>
                <artifactId>maven-report</artifactId>
                <version>${sonar-maven-report.version}</version>
            </plugin>
            <!--      JACOCO        -->  
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${maven-jacoco-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <!-- select non-aggregate reports -->
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <!--       LUTECE        -->
            <plugin>
                <groupId>fr.paris.lutece.tools</groupId>
                <artifactId>lutece-report-maven-plugin</artifactId>
                <version>${lutece-maven-report.version}</version>
            </plugin>
        </plugins>
    </reporting>

    <build>
        <sourceDirectory>src/java</sourceDirectory>
        <resources>
       		<resource>
            	<directory>src/main/resources</directory>
        	</resource> 
            <resource>
                <directory>src/java</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
        <testResource>
              <directory>src/test/resources</directory>
		</testResource>
        	<testResource>
        		<!-- <directory>target/${webapp.name}/WEB-INF/</directory>-->
        		 <directory>target/lutece/WEB-INF/</directory>
        		 <excludes>
                    <exclude>lib</exclude>
                </excludes>
           	     <targetPath>WEB-INF</targetPath>
        	</testResource>
        </testResources>

        <plugins>
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-enforcer-plugin</artifactId>
	        <version>3.5.0</version>
	        <executions>
	          <execution>
	            <id>enforce-maven</id>
	            <goals>
	              <goal>enforce</goal>
	            </goals>
	            <configuration>
	              <rules>
	              	<!-- Enforce maven [3.6,) -->
	                <requireMavenVersion>
	                  <version>3.6</version>
	                </requireMavenVersion>
	                <!-- Enforce Java [17,) -->
                    <requireJavaVersion>
                       <version>17</version>
                    </requireJavaVersion>
	              </rules>    
	            </configuration>
	          </execution>
	        </executions>
	      </plugin>
            <!--    JAVADOC       -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <show>public</show>
                    <minmemory>${memory.min}</minmemory>
                    <maxmemory>${memory.max}</maxmemory>
                    <additionalOptions>
                        <additionalOption>-Xdoclint:none</additionalOption>
                    </additionalOptions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${maven-jacoco-plugin.version}</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>jacoco.agent.argLine</propertyName>
                            <destFile>target/jacoco.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven-release-plugin.version}</version>
                <configuration>
                    <providerImplementations>
                        <git>jgit</git>
                    </providerImplementations>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.scm</groupId>
                        <artifactId>maven-scm-provider-jgit</artifactId>
                        <version>${maven-scm-provider-jgit.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven-site-plugin.version}</version>
                <configuration>
                    <locales>fr,en</locales>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-descriptor</id>
                        <goals>
                            <goal>attach-descriptor</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>fr.paris.lutece.tools</groupId>
                <artifactId>lutece-maven-plugin</artifactId>
                <extensions>true</extensions>
                <version>${maven-lutece-plugin.version}</version>
                <configuration>
		     <localConfDirectory>${localConfDirectory}</localConfDirectory> 

                    <!-- To work with the maven-openliberty-plugin in dev mode with exploded mode, uncomment the web resource below-->
                    <!--
					  <webResources>
	           			 <resource>
	              			<directory>${basedir}/webapp</directory>
	                        <filtering>true</filtering>
	            		</resource>
          			  </webResources> 
				     -->    
                </configuration>
                
            </plugin>
            <plugin>
                <groupId>fr.paris.lutece.tools</groupId>
                <artifactId>xdoc2md-maven-plugin</artifactId>
                <version>${maven-xdoc2md-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <forkCount>1</forkCount>
                    <reuseForks>true</reuseForks>
                    <argLine>${jacoco.agent.argLine}</argLine>
                    <testFailureIgnore>true</testFailureIgnore>
                    <excludes>
                        <exclude>**/MainTest.java</exclude>
                        <exclude>**/TestRunner.java</exclude>
                        <exclude>**/LuteceTestCase.java</exclude>
                        <exclude>**/AllTests.java</exclude>
                    </excludes>
                    <!--<systemPropertyVariables>
                    	<webapp.name>${webapp.name}</webapp.name>
                   </systemPropertyVariables>-->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
                <configuration>
                    <tasks>
                        <taskdef resource="net/sf/antcontrib/antcontrib.properties" />

                        <!-- replace markers in db-test-*.properties to allow command line values for tests -->
                        <if>
                            <not>
                                <equals arg1="${antrun-lutece-db-properties}" arg2="db.properties" />
                            </not>
                            <then>
                                <copy file="${basedir}/target/${explodedDirectory}/WEB-INF/sql/conf/${antrun-lutece-db-properties}" tofile="${basedir}/target/${explodedDirectory}/WEB-INF/conf/db.properties" overwrite="true" />
                                <replace file="${basedir}/target/${explodedDirectory}/WEB-INF/conf/db.properties" token="@lutece_antrun_db_host@" value="${lutece-antrun-db-host}" />
                                <replace file="${basedir}/target/${explodedDirectory}/WEB-INF/conf/db.properties" token="@lutece_antrun_db_name@" value="${lutece-antrun-db-name}" />
                                <replace file="${basedir}/target/${explodedDirectory}/WEB-INF/conf/db.properties" token="@lutece_antrun_db_user@" value="${lutece-antrun-db-user}" />
                                <replace file="${basedir}/target/${explodedDirectory}/WEB-INF/conf/db.properties" token="@lutece_antrun_db_password@" value="${lutece-antrun-db-password}" />
                            </then>
                        </if>

                        <!-- setup recording of our main script to generate a test report -->
                        <property name="antrun_report_dir" value="target/surefire-reports/" />
                        <property name="antrun_report_basename" value="antrun_report" />
                        <property name="antrun_report_txt" value="${antrun_report_dir}/${antrun_report_basename}.txt" />                         
                        <mkdir dir="${basedir}/${antrun_report_dir}" />
                        <record name="${basedir}/${antrun_report_txt}" append="true" action="start" />
						<!-- run our main ant script -->
                        
                        <ant antfile="${basedir}/target/${explodedDirectory}/WEB-INF/sql/build.xml" dir="${basedir}/target/${explodedDirectory}/WEB-INF/sql/">
                            <target name="all" />
                        </ant>
						<record name="${basedir}/${antrun_report_txt}" action="stop" />
                        <!-- Load recording of our main script to generate the xml report -->
                        <loadfile srcfile="${basedir}/${antrun_report_txt}" property="antrun_failures">
                            <filterchain>
                                <linecontainsregexp>
                                    <regexp pattern="Failed to execute" />
                                </linecontainsregexp>
                            </filterchain>
                        </loadfile>

                        <!-- Generate xml report (Junit format) -->
                        <property name="antrun_report_xml" value="${antrun_report_dir}/${antrun_report_basename}.xml" />
                        <if>
                            <equals arg1="${antrun_failures}" arg2="$${antrun_failures}" />
                            <then>
                                <!-- No failures -->
                             	 <echoxml file="${basedir}/${antrun_report_xml}">
                                     <testsuite name="antrunsql" time="1" tests="1" errors="0" skipped="0" failures="0">
                                         <testcase name="antrunsql" classname="antrunsql" time="1" />
                                     </testsuite>
                             	 </echoxml>
                            </then>
                            <else>
                                <!-- failures -->
                                <echoxml file="${basedir}/${antrun_report_xml}">
                                 	 <testsuite name="antrunsql" time="1" tests="1" errors="1" skipped="0" failures="0">
                                         <testcase name="antrunsql" classname="antrunsql" time="1">
                                             <failure type="antrunsql">${antrun_failures}</failure>
                                         </testcase>
                                     </testsuite>
                                </echoxml>
                            </else>
                        </if>
                    </tasks>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>ant</groupId>
                        <artifactId>ant-optional</artifactId>
                        <version>${ant-optional.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>${ant-contrib.version}</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
                <configuration>
                    <warSourceDirectory>${basedir}/webapp</warSourceDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.revelc.code.formatter</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
                <version>${maven-formatter-plugin.version}</version>
                <configuration>
                    <configFile>${build-config.location}/lutece_formatter.xml</configFile>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${license-maven-plugin.version}</version>
                <configuration>
                <licenseSets>
      			<licenseSet>
                    <header>${build-config.location}/LICENSE.TXT</header>
                    <includes>
                        <include>src/java/**/*.java</include>
                        <include>src/test/java/**/*.java</include>
                    </includes>
                 </licenseSet>
                </licenseSets>
                    <mapping>
                        <java>slashstar_style</java>
                    </mapping>
                    <quiet>true</quiet>
                    <failIfMissing>false</failIfMissing>
                    <properties>
                        <current.year>${current.year}</current.year>
                    </properties>
                </configuration>
                <executions>
                    <execution>
                        <id>check-license</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                    <execution>
                        <id>default-cli</id>
                        <configuration>
                            <quiet>false</quiet>
                            <failIfMissing>true</failIfMissing>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>fr.paris.lutece.tools</groupId>
                        <artifactId>build-config</artifactId>
                        <version>${build-config.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
           <plugin>
               <groupId>com.github.spotbugs</groupId>
       		   <artifactId>spotbugs-maven-plugin</artifactId>
               <version>4.5.3.0</version>
               <configuration>
               <plugins>
                    <plugin>
                        <groupId>com.h3xstream.findsecbugs</groupId>
                        <artifactId>findsecbugs-plugin</artifactId>
                        <version>1.12.0</version>
                    </plugin>
                </plugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>fr.paris.lutece.tools</groupId>
                        <artifactId>build-config</artifactId>
                        <version>${build-config.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>${maven-install-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
            </plugin>     
             <plugin>
                <groupId>io.openliberty.tools</groupId>
                <artifactId>liberty-maven-plugin</artifactId>
                <version>3.11-SNAPSHOT</version>
                <configuration>
                    <serverName>luteceServer</serverName>
                      <copyDependencies>
                        <dependencyGroup>
                            <location>${project.build.directory}/liberty/wlp/usr/shared/resources</location>
                           
                            <dependency>
                                <groupId>com.hazelcast</groupId>
                                <artifactId>hazelcast</artifactId>
                                <version>5.3.6</version>
                            </dependency>

                        </dependencyGroup>
                    </copyDependencies>
                </configuration>                
            </plugin>
        </plugins>

        <extensions>
            <!-- Adding the build-config jar containing misc files to the classpath -->
            <!-- used by different plugins, like checkstyle, pmd, jalopy, formatter, license -->
            <extension>
                <groupId>fr.paris.lutece.tools</groupId>
                <artifactId>build-config</artifactId>
                <version>${build-config.version}</version>
            </extension>
            <!-- Enabling the use of FTP -->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ftp</artifactId>
                <version>${maven-wagon-ftp.version}</version>
            </extension>
        </extensions>
    </build>

    <distributionManagement>
        <repository>
            <id>lutece_releases_repository</id>
            <url>https://${serverUrl}/nexus/content/repositories/lutece_releases_repository</url>
        </repository>

        <snapshotRepository>
            <uniqueVersion>true</uniqueVersion>
            <id>lutece_snapshots_repository</id>
            <url>https://${serverUrl}/nexus/content/repositories/lutece_snapshots_repository</url>
        </snapshotRepository>

        <site>
            <id>lutece_ftp_site_maven</id>
            <url>ftp://site-deploy.${serverUrl}/site/plugins</url>
        </site>
    </distributionManagement>

    <scm>
        <connection>scm:git:https://github.com/lutece-platform/tools-maven-global-pom.git</connection>
        <developerConnection>scm:git:https://github.com/lutece-platform/tools-maven-global-pom.git</developerConnection>
        <url>https://github.com/lutece-platform/tools-maven-global-pom.git</url>
        <tag>HEAD</tag>
    </scm>

    <profiles>
        <!-- databases drivers, for tests only -->
        <!-- Do not activate these for releases -->
        <!-- Choose your driver during tests with one of the following: -->
        <!--   mvn -Dlutece-test-mysql ... -->
        <!--   mvn -Dlutece-test-hsql ... -->
        <!--   mvn -Dlutece-test-postgresql ... -->
        <profile>
            <id>lutece-test-mysql</id>
            <activation>
                <property>
                    <name>lutece-test-mysql</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <!-- Must be kept in sync with lutece-core src/sql/build.properties -->
                    <version>${mysql.version}</version>
                    <optional>true</optional>
                </dependency>
            </dependencies>
            <properties>
                <antrun-lutece-db-properties>db-test-mysql.properties</antrun-lutece-db-properties>
            </properties>
        </profile>
        <profile>
            <id>lutece-test-postgresql</id>
            <activation>
                <property>
                    <name>lutece-test-postgresql</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>${postgresql.version}</version>
                    <optional>true</optional>
                </dependency>
            </dependencies>
            <properties>
                <antrun-lutece-db-properties>db-test-postgresql.properties</antrun-lutece-db-properties>
            </properties>
        </profile>
        <profile>
            <id>lutece-test-hsql</id>
            <activation>
                <property>
                    <name>lutece-test-hsql</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.hsqldb</groupId>
                    <artifactId>hsqldb</artifactId>
                    <version>${hsqldb.version}</version>
                    <optional>true</optional>
                </dependency>
            </dependencies>
            <properties>
                <antrun-lutece-db-properties>db-test-hsql.properties</antrun-lutece-db-properties>
            </properties>
        </profile>

    </profiles>

</project>
